{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetId": { "type": "string" },
    "privateLinkSubnetName": { "type": "string" },
    "keyvaultName": { "type": "string" },
    "logAnalyticsWorkspaceId": { "type": "string" }
  },
  "variables": {
    "keyVaultPublicDNSZoneForwarder": "[if(equals(toLower(environment().name), 'azureusgovernment'), '.vaultcore.usgovcloudapi.net', '.vaultcore.azure.net')]",
    "privateEndpointName": "[concat(parameters('keyvaultName'), '-plink')]",
    "privateDnsZoneName": "[concat('privatelink', variables('keyVaultPublicDNSZoneForwarder'))]",
    "keyVaultPrivateDnsZoneGroupName": "[concat(variables('privateEndpointName'),'/', variables('privateEndpointName'), 'PrivateDnsZoneGroup')]"
  },
  "resources": [
    {
      "name": "[parameters('keyvaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enableRbacAuthorization": true,
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "None"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "name": "[concat(parameters('keyvaultName'), '/Microsoft.Insights/service')]",
      "dependsOn": [
        "[parameters('keyvaultName')]"
      ],
      "properties": {
        "workspaceId": "[ parameters('logAnalyticsWorkspaceId')]",
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": 1,
              "enabled": false
            },
            "timeGrain": null
          }
        ],
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true,
            "retentionPolicy": {
              "days": 1,
              "enabled": false
            },
            "timeGrain": null
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-01-01",
      "name": "[variables('privateDnsZoneName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-01-01",
      "name": "[concat(variables('privateDnsZoneName'), '/', variables('privateDnsZoneName'), '-link')]",
      "location": "global",
      "dependsOn": [
        "[variables('privateDnsZoneName')]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[parameters('vnetId')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-04-01",
      "name": "[variables('privateEndpointName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ],
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('privateEndpointName')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]",
              "groupIds": [
                "vault"
              ]
            }
          }
        ],
        "subnet": {
          "id": "[concat(parameters('vnetId'), '/subnets/', parameters('privateLinkSubnetName'))]"
        },
        "customDnsConfigs": [
          {
            "fqdn": "[concat(parameters('keyVaultName'), variables('keyVaultPublicDNSZoneForwarder'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-03-01",
      "name": "[variables('keyVaultPrivateDnsZoneGroupName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('privateDnsZoneName')]",
        "[variables('privateEndpointName')]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "dnsConfig",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
            }
          }
        ]
      }
    }
  ]
}